version: "3.8"

services:
  caddy:
    container_name: caddy
    image: caddy:2.4.5
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - $PWD/Caddyfile:/etc/caddy/Caddyfile
    depends_on:
      - app-kami
    networks:
      - app-network

  app-kami:
    env_file:
      - .env
    container_name: mx-kami
    restart: "on-failure"
    ports:
      - "2323:2323"
    build:
      context: ./kami
      args:
        NODE_ENV: production
        BASE_URL: "${BASE_URL}"
    depends_on:
      - app-server
    command: "node server.js"
    environment:
      NODE_ENV: production
    networks:
      - app-network
    links:
      - app-server

  app-server:
    container_name: mx-server
    image: innei/mx-server:3
    volumes:
      - ./data/mx-space:/root/.mx-space
    command: node index.js --redis_host=redis --db_host=mongo --allowed_origins=${ALLOWED_ORIGINS} --jwt_secret=${JWT_SECRET} --cluster --color

    restart: "on-failure"
    ports:
      - "2333:2333"
    depends_on:
      - mongo
      - redis
    links:
      - mongo
      - redis
    networks:
      - app-network
    environment:
      - NODE_ENV=production
      - TZ=Asia/Shanghai
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:2333/info"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  mongo:
    container_name: mongo
    image: mongo
    volumes:
      - ./data/db:/data/db
    ports:
      - "127.0.0.1:3344:27017"
    networks:
      - app-network

  redis:
    image: redis
    container_name: redis

    networks:
      - app-network
networks:
  app-network:
    driver: bridge
